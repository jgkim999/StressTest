# -*- coding:utf-8 -*-

# A simple example using the HTTP plugin that shows the retrieval of a
# single page via HTTP.
#
# This script is automatically generated by ngrinder.
#
# @author admin
from net.grinder.script.Grinder import grinder
from net.grinder.script import Test
from java.util import Date
from java.util import Random
from HTTPClient import NVPair, Cookie, CookieModule

from net.grinder.plugin.http import HTTPRequest
from net.grinder.plugin.http import HTTPPluginControl

from org.json import JSONObject

# Uncomment this to use new experimental HTTP client.
# from org.ngrinder.http import HTTPRequest
# from org.ngrinder.http.cookie import Cookie, CookieManager

control = HTTPPluginControl.getConnectionDefaults()
# if you don't want that HTTPRequest follows the redirection, please modify the following option 0.
# control.followRedirects = 1
# if you want to increase the timeout, please modify the following option.
control.timeout = 6000

test1 = Test(1, "127.0.0.1")
request1 = HTTPRequest()

# Set header datas
headers = [] # Array of NVPair
headers.append(NVPair("Content-Type", "application/x-www-form-urlencoded"))
# Set param datas
params = [] # Array of NVPair
# Set cookie datas
cookies = [] # Array of Cookie

class TestRunner:
	# initlialize a thread
	def __init__(self):
		test1.record(TestRunner.__call__)
		grinder.statistics.delayReports=True
		pass

	def before(self):
		request1.setHeaders(headers)
		for c in cookies: CookieModule.addCookie(c, HTTPPluginControl.getThreadHTTPClientContext())

	def getrstr(self, length):
		import random, string
		seq = string.letters + string.digits
		return ''.join(random.choice(seq) for _ in xrange(length))

	# test method
	def __call__(self):
		self.before()

		rstr = self.getrstr(8)
		jsonMessage = '{"Id":"' + rstr + '"}'

		result = request1.POST("https://127.0.0.1:5003/api/login", jsonMessage, (NVPair('Content-Type', 'application/json'), ))
		grinder.logger.info(result.getText())

		# You get the message body using the getText() method.
		# if result.getText().find("HELLO WORLD") == -1 :
		#	 raise

		# if you want to print out log.. Don't use print keyword. Instead, use following.
		# grinder.logger.info("Hello World")

		if result.getStatusCode() == 200 :
			obj = JSONObject.parse(result.getText())
			sessionId = obj.get("sessionId")
			grinder.logger.info(sessionId)
			result2 = request1.GET("https://127.0.0.1:5003/api/login" + sessionId)
			grinder.logger.info(result2.getText())
		elif result.getStatusCode() in (301, 302) :
			grinder.logger.warn("Warning. The response may not be correct. The response code was %d." %  result.getStatusCode())
			return
		else :
			raise
